@model ISP.GestaoMatriculas.ViewModels.StaggingEditViewModel
@{
    ViewBag.Title = "Editar erro " + @Html.DisplayFor(model => model.eventoStagging.nrApolice) + " " + @Html.DisplayFor(model => model.eventoStagging.matricula);
}
@section css{
    @Styles.Render("~/Content/myWizardFuelux/css")
}
@section scripts{
    @Scripts.Render("~/bundles/myWizardFuelux");
    <script type='text/javascript'>

        $(function () {
            $('#tabs a:first').tab('show')
        });

        $(document).ready(function () {
            $('#rootwizard').bootstrapWizard({
                tabClass: 'steps',
                onTabShow: function (tab, navigation, index) {
                    var $total = navigation.find('li').length;
                    var $current = index + 1;

                    // If it's the last tab then hide the last button and show the finish instead
                    if ($current >= $total) {
                        $('#rootwizard').find('.wizard-buttons .next').hide();
                        $('#rootwizard').find('.wizard-buttons .finish').show();
                        $('#rootwizard').find('.wizard-buttons .finish').removeClass('disabled');
                    } else {
                        $('#rootwizard').find('.wizard-buttons .next').show();
                        $('#rootwizard').find('.wizard-buttons .finish').hide();
                    }
                }
            });

            $('#rootwizard .finish').click(function () {
                $('#StaggingForm').submit();
            });
        });

    </script>
}
<h2>
    Editar erro @Html.DisplayFor(model => model.eventoStagging.nrApolice)</h2>
<h4>
    (@Html.DisplayFor(model => model.eventoStagging.matricula),
    @Html.DisplayFor(model => model.eventoStagging.entidade.nome), @Html.DisplayFor(model => model.eventoStagging.dataInicioCobertura)
    @Html.DisplayFor(model => model.eventoStagging.horaInicioCobertura))</h4>
<ul id="tabs" class="nav nav-tabs">
    <li><a href="#detalhesTab" data-toggle="tab">Detalhes</a></li>
    <li><a href="#errosTab" data-toggle="tab">Erros
        @if ((Model.eventoStagging.errosEventoStagging.Count + Model.eventoStagging.avisosEventoStagging.Count) > 0)
        {
            <span class="badge badge-important">@(Model.eventoStagging.errosEventoStagging.Count + Model.eventoStagging.avisosEventoStagging.Count)</span>
        }
    </a></li>
    <li><a href="#operacoesTab" data-toggle="tab">Operações associadas
        @if (Model.historicoStagging.Where(h => h.codigoOperacao != Model.eventoStagging.codigoOperacao && h.arquivado == false).Count() > 0)
        { 
            <span class="badge badge-important">@Model.historicoStagging.Where(h => h.codigoOperacao != Model.eventoStagging.codigoOperacao && h.arquivado == false).Count()</span>
        }
    </a></li>
    <li><a href="#historicoTab" data-toggle="tab">Cumulativo do erro
        @if (Model.historicoStagging.Where(h => h.codigoOperacao == Model.eventoStagging.codigoOperacao).Count() > 0)
        {
            <span class="badge badge-important">@Model.historicoStagging.Where(h => h.codigoOperacao == Model.eventoStagging.codigoOperacao).Count()</span>
        }
    </a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="detalhesTab">
        <fieldset>
            @using (Html.BeginForm("EditStagging", "Apolices", FormMethod.Post, new { @id = "StaggingForm" }))
            {
                @Html.ValidationSummary(true)
                @Html.AntiForgeryToken()

                <div id="rootwizard" class="well fuelux">
                    <div class="wizard">
                        <ul class="steps">
                            <a href="#periodo" data-toggle="tab">
                                <li class="complete active"><span class="badge badge-info">1</span> Período Seguro <span
                                    class="chevron"></span></li>
                            </a><a href="#veiculo" data-toggle="tab">
                                <li class="complete"><span class="badge badge-success">2</span> Veículo <span class="chevron">
                                </span></li>
                            </a><a href="#tomador" data-toggle="tab">
                                <li class="complete"><span class="badge badge-success">3</span> Tomador de Seguro<span
                                    class="chevron"> </span></li>
                            </a>
                        </ul>
                    </div>
                    <div class="tab-content">
                        <div class="tab-pane" id="periodo">
                            <legend>Período Seguro</legend>
                            <div class="editor-field">
                                @Html.HiddenFor(model => model.eventoStagging.eventoStaggingId)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.codigoOperacao)
                            </div>
                            <div class="editor-field">
                                @Html.HiddenFor(model => model.eventoStagging.codigoOperacao)
                                @Html.DisplayFor(model => model.eventoStagging.codigoOperacao)
                                @Html.ValidationMessageFor(model => model.eventoStagging.codigoOperacao)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.idOcorrencia)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.idOcorrencia)
                                @Html.ValidationMessageFor(model => model.eventoStagging.idOcorrencia)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.nrApolice)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.nrApolice)
                                @Html.ValidationMessageFor(model => model.eventoStagging.nrApolice)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.nrCertificadoProvisorio)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.nrCertificadoProvisorio)
                                @Html.ValidationMessageFor(model => model.eventoStagging.nrCertificadoProvisorio)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.dataInicioCobertura)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.dataInicioCobertura)
                                @Html.ValidationMessageFor(model => model.eventoStagging.dataInicioCobertura)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.horaInicioCobertura)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.horaInicioCobertura)
                                @Html.ValidationMessageFor(model => model.eventoStagging.horaInicioCobertura)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.dataFimCobertura)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.dataFimCobertura)
                                @Html.ValidationMessageFor(model => model.eventoStagging.dataFimCobertura)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.horaFimCobertura)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.horaFimCobertura)
                                @Html.ValidationMessageFor(model => model.eventoStagging.horaFimCobertura)
                            </div>
                        </div>
                        <div class="tab-pane" id="veiculo">
                            <legend>Veículo</legend>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.matricula)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.matricula)
                                @Html.ValidationMessageFor(model => model.eventoStagging.matricula)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.marca)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.marca)
                                @Html.ValidationMessageFor(model => model.eventoStagging.marca)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.modelo)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.modelo)
                                @Html.ValidationMessageFor(model => model.eventoStagging.modelo)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.anoConstrucao)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.anoConstrucao)
                                @Html.ValidationMessageFor(model => model.eventoStagging.anoConstrucao)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.codigoCategoriaVeiculo)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.codigoCategoriaVeiculo)
                                @Html.ValidationMessageFor(model => model.eventoStagging.codigoCategoriaVeiculo)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.codigoConcelhoCirculacao)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.codigoConcelhoCirculacao)
                                @Html.ValidationMessageFor(model => model.eventoStagging.codigoConcelhoCirculacao)
                            </div>
                        </div>
                        <div class="tab-pane" id="tomador">
                            <legend>Tomador do Seguro</legend>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.nomeTomadorSeguro)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.nomeTomadorSeguro)
                                @Html.ValidationMessageFor(model => model.eventoStagging.nomeTomadorSeguro)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.moradaTomadorSeguro)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.moradaTomadorSeguro)
                                @Html.ValidationMessageFor(model => model.eventoStagging.moradaTomadorSeguro)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.codigoPostalTomador)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.codigoPostalTomador)
                                @Html.ValidationMessageFor(model => model.eventoStagging.codigoPostalTomador)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.nrIdentificacaoTomadorSeguro)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.nrIdentificacaoTomadorSeguro)
                                @Html.ValidationMessageFor(model => model.eventoStagging.nrIdentificacaoTomadorSeguro)
                            </div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.eventoStagging.nifTomadorSeguro)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.eventoStagging.nifTomadorSeguro)
                                @Html.ValidationMessageFor(model => model.eventoStagging.nifTomadorSeguro)
                            </div>
                        </div>
                        <div class="wizard-buttons">
                            @*<li class="previous first" style="display:none;"><a href="#">Primeiro</a></li>*@
                            <li class="previous"><a href="#">Anterior</a></li>
                            @*<li class="next last" style="display:none;"><a href="#">Último</a></li>*@
                            <li class="next"><a href="#">Próximo</a></li>
                            <li class="next finish" style="display: none;"><a href="javascript:;">Guardar</a></li>
                        </div>
                    </div>
                </div>
            }
        </fieldset>
    </div>
    <div class="tab-pane" id="historicoTab">
        <div class="well">
            @if (Model.historicoStagging.Where(h => h.codigoOperacao == Model.eventoStagging.codigoOperacao).Count() > 0)
            { 
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().entidade)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().estadoEvento)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().codigoOperacao)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().nrApolice)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().dataInicioCobertura)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().dataFimCobertura)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().matricula)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().nomeTomadorSeguro)
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemHistorico in Model.historicoStagging.Where(h => h.codigoOperacao == Model.eventoStagging.codigoOperacao))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.entidade.nome)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.estadoEvento.descricao)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.codigoOperacao)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.nrApolice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.dataInicioCobertura)
                                    @Html.DisplayFor(modelItem => itemHistorico.horaInicioCobertura)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.dataFimCobertura)
                                    @Html.DisplayFor(modelItem => itemHistorico.horaFimCobertura)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.matricula)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.nomeTomadorSeguro)
                                </td>
                                <td>
                                    @Html.ActionLink("Editar", "EditStagging", new { id = itemHistorico.eventoStaggingId })
                                    |
                                    @Html.ActionLink("Detalhes", "DetailsStagging", new { id = itemHistorico.eventoStaggingId })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            { 
                <div>
                    Não existe histórico de erros para esta operação.</div>
            }
        </div>
    </div>
    <div class="tab-pane" id="operacoesTab">
        <div class="well">
            @if (Model.historicoStagging.Where(h => h.codigoOperacao != Model.eventoStagging.codigoOperacao && h.arquivado == false).Count() != 0)
            { 
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().entidade)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().estadoEvento)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().codigoOperacao)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().nrApolice)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().dataInicioCobertura)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().dataFimCobertura)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().matricula)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.historicoStagging.First().nomeTomadorSeguro)
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemHistorico in Model.historicoStagging.Where(h => h.codigoOperacao != Model.eventoStagging.codigoOperacao && h.arquivado == false))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.entidade.nome)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.estadoEvento.descricao)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.codigoOperacao)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.nrApolice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.dataInicioCobertura)
                                    @Html.DisplayFor(modelItem => itemHistorico.horaInicioCobertura)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.dataFimCobertura)
                                    @Html.DisplayFor(modelItem => itemHistorico.horaFimCobertura)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.matricula)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemHistorico.nomeTomadorSeguro)
                                </td>
                                <td>
                                    @Html.ActionLink("Editar", "EditStagging", new { id = itemHistorico.eventoStaggingId })
                                    |
                                    @Html.ActionLink("Detalhes", "DetailsStagging", new { id = itemHistorico.eventoStaggingId })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            { 
                <div>
                    Não existem operações associadas com erro(s).</div>
            }
        </div>
    </div>
    <div class="tab-pane" id="errosTab">
        <div class="well">
            @if (Model.eventoStagging.errosEventoStagging.Count() != 0)
            { 
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                Tipo
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.eventoStagging.errosEventoStagging.First().campo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.eventoStagging.errosEventoStagging.First().descricao)
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var erro in Model.eventoStagging.errosEventoStagging)
                        {
                            <tr>
                                <td>
                                    Erro
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => erro.campo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => erro.descricao)
                                </td>
                            </tr>
                        }
                        @foreach (var aviso in Model.eventoStagging.avisosEventoStagging)
                        {
                            <tr>
                                <td>
                                    Aviso
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => aviso.campo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => aviso.descricao)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            { 
                <div>
                    Não existem erros.</div>
            }
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Voltar à listagem", "Index", new { tabNr = 1 })
</p>
