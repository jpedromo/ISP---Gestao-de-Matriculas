<?xml version="1.0" encoding="utf-8"?>
<!--
	For more information on how to configure your ASP.NET application, please visit
	http://go.microsoft.com/fwlink/?LinkId=169433
	-->
<configuration>
  <configSections>
    <!--
			*** IMPORTANT NOTE: 
			Since version 1.9.2 the section name has changed from name="fileUpload" to name="backload" (see below). 
			The root element must also be changed in your config file from <fileUpload> to <backload>
			The ConfigurationSection class has changed to <section type="Backload.Configuration.BackloadSection ..." />
			
		You can make the config settings in the web.config. Alternatively you can use a seperate config file
			as shown below in most examples. Just copy this section declaration with the appropriate configSource 
			attribute into your Web.config file.
			For more on config options and settings refer to the wiki on GitHub (https://github.com/blackcity/Backload) 
			or use the Web.Backload.Default.config file as a starting point.
-->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
    <!--<sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>-->
    <section name="backload" type="Backload.Configuration.BackloadSection, Backload, Version=1.9, Culture=neutral, PublicKeyToken=02eaf42ab375d363" requirePermission="false" />
    <section name="autofac" type="Autofac.Configuration.SectionHandler, Autofac.Configuration" />
<<<<<<< HEAD
    <section name="formsAuthenticationWrapper" type="Mvolo.Modules.FormsAuthConfigurationSection" />
  </configSections>
  <connectionStrings>
    <!--<add name="DefaultConnection" connectionString="Data Source=slx01dev20;Initial Catalog=ISP_BD_MATRICULAS;MultipleActiveResultSets=True;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />
    <add name="DomainModels" connectionString="Data Source=slx01dev20;Initial Catalog=ISP_BD_MATRICULAS;MultipleActiveResultSets=True;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />-->
    <add name="DefaultConnection" connectionString="Data Source=localhost;Initial Catalog=ISP_BD_MATRICULAS;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />
    <add name="DomainModels" connectionString="Data Source=localhost;Initial Catalog=ISP_BD_MATRICULAS;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />
=======
  </configSections>
  <connectionStrings>
    <!--<add name="DefaultConnection" connectionString="Data Source=WLX0113119;Initial Catalog=ISP_BD_MATRICULAS;MultipleActiveResultSets=True;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />
    <add name="DomainModels" connectionString="Data Source=WLX0113119;Initial Catalog=ISP_BD_MATRICULAS;MultipleActiveResultSets=True;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />-->
    <!--<add name="DefaultConnection" connectionString="Data Source=slx01dev20;Initial Catalog=ISP_BD_MATRICULAS;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />
		<add name="DomainModels" connectionString="Data Source=slx01dev20;Initial Catalog=ISP_BD_MATRICULAS;User Id=user_ispmat;Password=admin" providerName="System.Data.SqlClient" />-->
  
  <add name="ISPMatriculas" connectionString="Data Source=.\sqlexpress;Initial Catalog=ISP_BD_MATRICULAS;User Id=sa;Password=Pass1234" providerName="System.Data.SqlClient" />
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
  </connectionStrings>
  <autofac>
    <components>
      <component type="ISP.GestaoMatriculas.Repositories.UserProfileRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IUserProfileRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.EntidadeRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IEntidadeRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.RoleRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IRoleRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.ApoliceRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IApoliceRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.ApoliceHistoricoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IApoliceHistoricoRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.CategoriaRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.ICategoriaRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.ConcelhoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IConcelhoRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.VeiculoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IVeiculoRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.PessoaRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IPessoaRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.FicheiroRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IFicheiroRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.NotificacaoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.INotificacaoRepository, ISP.GestaoMatriculas.Contracts" />
<<<<<<< HEAD
      <component type="ISP.GestaoMatriculas.Repositories.AvisoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IAvisoRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.EventoStaggingRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IEventoStaggingRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.EventoHistoricoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IEventoHistoricoRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.ErroEventoStaggingRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IErroEventoStaggingRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.IndicadorRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IIndicadorRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.ApoliceIsentoRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IApoliceIsentoRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.FicheiroIsentosRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IFicheiroIsentosRepository, ISP.GestaoMatriculas.Contracts" />
      <component type="ISP.GestaoMatriculas.Repositories.ValorSistemaRepository, ISP.GestaoMatriculas.Repositories" service="ISP.GestaoMatriculas.Contracts.IValorSistemaRepository, ISP.GestaoMatriculas.Contracts" />
=======
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
    </components>
  </autofac>
  <!--<elmah>
    <errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="~/App_Data/Elmah" />
  </elmah>-->
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
<<<<<<< HEAD
=======
    <add key="FilesUploadDestination" value="C:\UploadFolder" />
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
    <!--<add key="elmah.mvc.disableHandler" value="false" />
    <add key="elmah.mvc.disableHandleErrorFilter" value="false" />
    <add key="elmah.mvc.requiresAuthentication" value="false" />
    <add key="elmah.mvc.IgnoreDefaultRoute" value="false" />
    <add key="elmah.mvc.allowedRoles" value="*" />
    <add key="elmah.mvc.allowedUsers" value="*" />
    <add key="elmah.mvc.route" value="elmah" />-->
  </appSettings>
  <system.web>
    <customErrors mode="Off" defaultRedirect="~/Error"></customErrors>
    <roleManager enabled="true" cacheRolesInCookie="true" />
    <compilation debug="true" targetFramework="4.0" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <!--<httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
    </httpModules>-->
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
<<<<<<< HEAD
    <modules>
      <remove name="FormsAuthentication" />
      <add name="FormsAuthentication" type="Mvolo.Modules.FormsAuthModule" />
    </modules>
=======
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
    <!--<modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
    </modules>-->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="1073741824" />
      </requestFiltering>
    </security>
<<<<<<< HEAD
    <handlers>
=======
  <handlers>
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
<<<<<<< HEAD
    </handlers>
  </system.webServer>
=======
    </handlers></system.webServer>
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.18.0" newVersion="2.2.18.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
				 to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <!--<location path="Account/Index">
		<system.web>
			<authorization>
				<allow roles="Admin" />
				<deny users="*" />
			</authorization>
		</system.web>
	</location>-->
  <location path="FilesUpload/Upload">
<<<<<<< HEAD
    <system.web>
      <httpRuntime maxRequestLength="1048576" executionTimeout="600" />
    </system.web>
  </location>
  <location path="UploadIsentos/Upload">
    <system.web>
      <httpRuntime maxRequestLength="1048576" executionTimeout="600" />
    </system.web>
  </location>
  <location path="Account/LoginAD">
    <!-- Disable Forms Authentication -->
    <formsAuthenticationWrapper enabled="false" />
    <system.webServer>
      <security>
        <!-- Enable IIS Windows authentication for the login page -->
        <authentication>
          <windowsAuthentication enabled="true" useKernelMode="true" useAppPoolCredentials="true" />
          <anonymousAuthentication enabled="false" />
        </authentication>
      </security>
    </system.webServer>
    </location>

=======
		<system.web>
      <httpRuntime maxRequestLength="1048576" executionTimeout="600" />
		</system.web>
	</location>
  
>>>>>>> 6bef4ea7199f182f1dcc5a1156a157494ff9f29c
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
					 before trusting HTTPS certificates.  But this setting tends to not 
					 be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
							 with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
				 which is necessary for OpenID urls with unicode characters in the domain/host name.
				 It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
  <!--<elmah>
  </elmah>-->
  <!-- 
	<backload configSource="Web.Backload.config" /> 
	-->
</configuration>
